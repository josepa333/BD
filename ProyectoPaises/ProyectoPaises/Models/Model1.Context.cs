//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoPaises.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class proyectoBases2Entities1 : DbContext
    {
        public proyectoBases2Entities1()
            : base("name=proyectoBases2Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<nombres> nombres { get; set; }
        public virtual DbSet<pais> pais { get; set; }
        public virtual DbSet<persona> persona { get; set; }
    
        public virtual int actualizaPersona(Nullable<decimal> cedula, string nbrPersona, Nullable<decimal> paisNacimiento, Nullable<decimal> paisResidencia, Nullable<System.DateTime> fecha, string correo, byte[] foto, byte[] entrevista)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(decimal));
    
            var nbrPersonaParameter = nbrPersona != null ?
                new ObjectParameter("nbrPersona", nbrPersona) :
                new ObjectParameter("nbrPersona", typeof(string));
    
            var paisNacimientoParameter = paisNacimiento.HasValue ?
                new ObjectParameter("paisNacimiento", paisNacimiento) :
                new ObjectParameter("paisNacimiento", typeof(decimal));
    
            var paisResidenciaParameter = paisResidencia.HasValue ?
                new ObjectParameter("paisResidencia", paisResidencia) :
                new ObjectParameter("paisResidencia", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var entrevistaParameter = entrevista != null ?
                new ObjectParameter("entrevista", entrevista) :
                new ObjectParameter("entrevista", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("actualizaPersona", cedulaParameter, nbrPersonaParameter, paisNacimientoParameter, paisResidenciaParameter, fechaParameter, correoParameter, fotoParameter, entrevistaParameter);
        }
    
        public virtual ObjectResult<consulta1_Result> consulta1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consulta1_Result>("consulta1");
        }
    
        public virtual ObjectResult<consulta2_Result> consulta2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consulta2_Result>("consulta2");
        }
    
        public virtual int insercionPersonas(Nullable<int> numPais)
        {
            var numPaisParameter = numPais.HasValue ?
                new ObjectParameter("numPais", numPais) :
                new ObjectParameter("numPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insercionPersonas", numPaisParameter);
        }
    
        public virtual int meterPoblacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("meterPoblacion");
        }
    
        public virtual ObjectResult<paginarPaises_Result> paginarPaises(Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter pageCount)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paginarPaises_Result>("paginarPaises", pageIndexParameter, pageSizeParameter, pageCount);
        }
    
        public virtual ObjectResult<paginarPersonasPorPais_Result> paginarPersonasPorPais(Nullable<decimal> idPais, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter pageCount)
        {
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("idPais", idPais) :
                new ObjectParameter("idPais", typeof(decimal));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paginarPersonasPorPais_Result>("paginarPersonasPorPais", idPaisParameter, pageIndexParameter, pageSizeParameter, pageCount);
        }
    }
}
