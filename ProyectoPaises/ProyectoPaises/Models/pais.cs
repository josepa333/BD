//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoPaises.Models
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;

    public partial class pais
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public pais()
        {
            this.persona1 = new HashSet<persona>();
            this.persona2 = new HashSet<persona>();
        }
    
        public decimal idPais { get; set; }
        public string nbrPais { get; set; }
        public decimal area { get; set; }
        public decimal poblacion { get; set; }
        public byte[] BANDERA { get; set; }
        public byte[] HIMNO { get; set; }
        public Nullable<decimal> idPresidenteActual { get; set; }
    
        public virtual persona persona { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<persona> persona1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<persona> persona2 { get; set; }

        public List<pais> Listar(int pageIndex, int pageSize, out int pageCount)
        {
            List<pais> orders = new List<pais>();
            using (SqlConnection conexion = new SqlConnection("Data Source=ecRhin.ec.tec.ac.cr\\Estudiantes;Initial Catalog=proyectoBases2;Persist Security Info=True;User ID=josepalvarado;Password=josepalvarado;MultipleActiveResultSets=True;Application Name=EntityFramework"))
            {
                conexion.Open();
                using (SqlCommand comando = new SqlCommand("paginarPaises", conexion))
                {
                    comando.CommandType = CommandType.StoredProcedure;
                    comando.CommandTimeout = 0;
                    comando.Parameters.AddWithValue("@pageIndex", pageIndex);
                    comando.Parameters.AddWithValue("@pageSize", pageSize);
                    comando.Parameters.AddWithValue("@pageCount", 0).Direction = ParameterDirection.Output;
                    using (SqlDataReader reader = comando.ExecuteReader())
                    {
                        if (reader != null)
                        {
                            pais order = null;
                            while (reader.Read())
                            {
                                order = new pais();
                                order.idPais = (decimal)reader["idPais"];
                                order.nbrPais = (string)reader["nbrPais"];
                                order.area = (decimal)reader["area"];
                                order.poblacion = (decimal)reader["poblacion"];
                                if (reader["BANDERA"] != DBNull.Value) order.BANDERA = (byte[])reader["BANDERA"];
                                if (reader["HIMNO"] != DBNull.Value) order.HIMNO = (byte[])reader["HIMNO"];
                                if (reader["idPresidenteActual"] != DBNull.Value) order.idPresidenteActual = (decimal)reader["idPresidenteActual"];
                                orders.Add(order);
                            }
                        }
                    }
                    pageCount = (int)comando.Parameters["@pageCount"].Value;
                }
            }
            return orders;
        }

            

    }
}
